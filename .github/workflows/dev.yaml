on:
  push:
    branches:
      - main

name: Release Dev

env:
  TARBALL: microsoft-teams-app-dev-${{ github.sha }}.tar.gz
  S3_PATH: ${{ secrets.S3_PATH_DEV }}
  AWS_REGION: ${{ secrets.AWS_REGION_DEV }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
  AWS_STACK_ID: ${{ secrets.AWS_STACK_ID_DEV }}
  AWS_LAYER_ID: ${{ secrets.AWS_LAYER_ID_DEV }}
  AWS_APP_ID: ${{ secrets.AWS_APP_ID_DEV }}


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: SubscriptionCheckout
        uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Install build cache
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/dist/client/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}

      - name: Build package
        run: npm run build

      - name: Install production dependencies
        run: npm ci --production

      - name: Create release
        run: tar -czf $TARBALL ./node_modules ./package.json ./pm2.json dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload release
        run: aws s3 cp $TARBALL $S3_PATH/

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Change latest release
        run: aws s3 cp $S3_PATH/$TARBALL $S3_PATH/microsoft-teams-app-dev-latest.tar.gz

#      - name: Change the release version
#        run: aws opsworks --region $AWS_REGION update-app --app-id $AWS_APP_ID --environment Key=NEXT_PUBLIC_VERSION,Value=0.0.0-${GITHUB_SHA},Secure=false

      - name: Deploy
        run: >
          aws opsworks --region $AWS_REGION create-deployment --stack-id $AWS_STACK_ID --layer-ids $AWS_LAYER_ID --app-id $AWS_APP_ID --command "{\"Name\":\"deploy\"}" --custom-json "{\"zeplin\": {\"app_shortname\":\"zeplin_microsoft_teams_app\"}}"


